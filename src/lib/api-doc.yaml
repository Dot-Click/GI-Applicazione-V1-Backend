openapi: "3.0.0"
info:
  title: "GI-Costruzioni API Documentation"
  version: "1.0.0"
  description: "API documentation using Swagger"

servers:
  [
    { url: "http://localhost:4000", description: "Local server" },
    {
      url: "https://gi-applicazione-v1-backend-production.up.railway.app",
      description: "Live server",
    },
  ]

paths:
  # Authentication
  /api/auth/login-admin:
    post:
      summary: Admin login
      description: Logs in an admin user and returns an authentication token.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "admin71@gmail.com"
                password:
                  type: string
                  format: password
                  example: "admin123471"
      responses:
        200:
          description: Admin logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "logged in Successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: b9fc47c2-8f4e-4b3d-9eff-cd5f444b3bff
                      name:
                        type: string
                        example: admin1244
                      email:
                        type: string
                        example: "admin@example.com"
                      password:
                        type: string
                        example: $2b$10$kZkkGYV/WOW6F.Gkq8lMcOp1ImuvGH7GSFTLCHDsrsyS2eMiDdK3a
                      role:
                        type: string
                        example: ADMIN
                      createdAt:
                        type: string
                        example: 2025-02-13 18:41:47.357
                      updatedAt:
                        type: string
                        example: 2025-02-13 18:41:47.357
        400:
          description: Invalid email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example:
                      - "L’indirizzo email inserito non è associato a GI Costruzioni"
                      - "La password non è corretta. Riprova o reimposta la tua password se l'hai dimenticata"
        401:
          description: Missing fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Tutti i campi sono obbligatori"
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"

  /api/auth/getAdmin:
    get:
      summary: Get admin details
      description: Retrieves the details of the authenticated admin user.
      security:
        - bearerAuth: []
      tags:
        - Authentication
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: "Bearer token for authentication. Example: 'Bearer YOUR_TOKEN'"
      responses:
        200:
          description: Admin details fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Admin details fetched"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: b9fc47c2-8f4e-4b3d-9eff-cd5f444b3bff
                      name:
                        type: string
                        example: admin1244
                      email:
                        type: string
                        example: "admin60@gmail.com"
                      role:
                        type: string
                        example: ADMIN
                      createdAt:
                        type: string
                        example: 2025-02-13 18:41:47.357
                      updatedAt:
                        type: string
                        example: 2025-02-13 18:41:47.357
                      orders:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 1161573e-bdf6-42cc-a7c1-4f6c84c99b21
                            code:
                              type: string
                              example: ORD123456
                            description:
                              type: string
                              example: "Order description here"
                            workAmount:
                              type: number
                              format: decimal
                              example: 15000.00
                            advancePayment:
                              type: number
                              format: decimal
                              example: 5000.00
                            startDate:
                              type: string
                              format: date-time
                              example: "2025-02-18T10:00:00Z"
                            endDate:
                              type: string
                              format: date-time
                              example: "2025-03-18T10:00:00Z"
                            address:
                              type: string
                              example: "123 Main Street"
                            orderManager:
                              type: string
                              example: "John Doe"
                            siteManager:
                              type: string
                              example: "Jane Smith"
                            technicalManager:
                              type: string
                              example: "Alex Brown"
                            cnceCode:
                              type: string
                              example: "CNCE-789"
                            cap:
                              type: string
                              example: "CAP-101"
                            cig:
                              type: string
                              example: "CIG-102"
                            cup:
                              type: string
                              example: "CUP-103"
                            iva:
                              type: number
                              example: 18.00
                            dipositRecovery:
                              type: number
                              example: 100.00
                            vat:
                              type: number
                              example: 12.00
                            withholdingAmount:
                              type: number
                              example: 200.00
                            contract:
                              type: string
                              example: "path/to/contract.pdf"
                            permission_to_build:
                              type: string
                              example: "path/to/permission_to_build.pdf"
                            psc:
                              type: string
                              example: "path/to/psc.pdf"
                            pos:
                              type: string
                              example: "path/to/pos.pdf"
                            isPublic:
                              type: boolean
                              example: true
                            status:
                              type: string
                              enum:
                                - "ON_HOLD"
                                - "In corso"
                                - "Completato"
                                - "Cancellato"
                              default: "ON_HOLD"
                            createdAt:
                              type: string
                              example: "2025-02-12 18:14:47.456"
                            updatedAt:
                              type: string
                              example: "2025-02-11 22:19:34.99"
                      customers:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 1161573e-bdf6-42cc-a7c1-4f6c84c99b21
                            companyName:
                              type: string
                              example: "Tech Solutions"
                            vat:
                              type: string
                              example: "IT123456789"
                            taxId:
                              type: string
                              example: "TAX123456"
                            ateco:
                              type: string
                              example: "6201"
                            nation:
                              type: string
                              example: "Italy"
                            province:
                              type: string
                              example: "Lombardy"
                            address:
                              type: string
                              example: "Via Roma 123"
                            common:
                              type: string
                              example: "Milan"
                            cap:
                              type: string
                              example: "20100"
                            pec:
                              type: string
                              example: "customer@pec.it"
                            email:
                              type: string
                              format: email
                              example: "customer@example.com"
                            telephone:
                              type: string
                              example: "+39 123 456 7890"
                            createdAt:
                              type: string
                              example: "2025-02-12 18:14:47.456"
                            updatedAt:
                              type: string
                              example: "2025-02-11 22:19:34.99"
                      suppliers:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 1161573e-bdf6-42cc-a7c1-4f6c84c99b21
                            companyName:
                              type: string
                              example: "Tech Solutions"
                            vat:
                              type: string
                              example: "IT123456789"
                            taxId:
                              type: string
                              example: "TAX123456"
                            ateco:
                              type: string
                              example: "6201"
                            nation:
                              type: string
                              example: "Italy"
                            province:
                              type: string
                              example: "Lombardy"
                            address:
                              type: string
                              example: "Via Roma 123"
                            common:
                              type: string
                              example: "Milan"
                            cap:
                              type: string
                              example: "20100"
                            pec:
                              type: string
                              example: "customer@pec.it"
                            email:
                              type: string
                              format: email
                              example: "customer@example.com"
                            telephone:
                              type: string
                              example: "+39 123 456 7890"
                            createdAt:
                              type: string
                              example: "2025-02-12 18:14:47.456"
                            updatedAt:
                              type: string
                              example: "2025-02-11 22:19:34.99"

  /api/auth/logout:
    post:
      summary: Logout the authenticated admin user.
      tags:
        - Authentication
      description: |
        This endpoint logs out the authenticated admin user by clearing the `token` and `refreshToken` cookies.
        The cookies are cleared with specific attributes (`httpOnly`, `secure`, and `sameSite: "none"`) for security.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful logout.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "logout successfull"
        '401':
          description: Unauthorized. Authentication failed or user is not authorized.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  # Verification
  /api/auth/verify-email:
    post:
      summary: Verify if an email exists
      description: Checks if an email exists in the database and generates a verification token if found.
      tags:
        - Verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: "admin17@gmail.com"
      responses:
        200:
          description: Email found successfully, verification token set in cookies
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ti abbiamo inviato un’e-mail per consentirti di reimpostare la password"
                  status:
                    type: boolean
                    example: true
        401:
          description: Email not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "L’indirizzo email inserito non è associato a GI Costruzioni"
                  status:
                    type: boolean
                    example: false
        400:
          description: Missing email in the request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "L'e-mail è obbligatoria!"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"

  /api/auth/update-pass:
    patch:
      summary: Update admin password
      description: Updates the password for a user based on a valid verification token.
      tags:
        - Verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - newPassword
              properties:
                token:
                  type: string
                  description: JWT token received during email verification.
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                newPassword:
                  type: string
                  format: password
                  description: The new password to set.
                  example: "NewSecurePass123!"
      responses:
        200:
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "password updated successfully"
                  status:
                    type: boolean
                    example: true
        401:
          description: Missing or invalid token / Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Verification Expired"
                  status:
                    type: boolean
                    example: false
        400:
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Missing Required Fields"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"

  # order APIs
  /api/order/create:
    post:
      summary: create order from admin
      description: create an order by admin id having required fields
      security:
        - bearerAuth: []
      tags:
        - Order
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: "Bearer token for authentication. Example: 'Bearer YOUR_TOKEN'"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - code
                - description
                - startDate
                - endDate
                - address
                - cap
                - cig
                - cup
                - siteManager
                - orderManager
                - technicalManager
                - cnceCode
                - isPublic
                - workAmount
                - advancePayment
                - dipositRecovery
                - iva
                - withholdingAmount
                - contract
                - permission_to_build
                - psc
                - pos
                - desc_pos
                - desc_psc
                - desc_permission_to_build
                - desc_contract
                - add_additional_1
                - add_additional_2
                - add_additional_3
                - add_additional_4
              properties:
                code:
                  type: string
                  example: "ORD123456"
                description:
                  type: string
                  example: "Order description here"
                workAmount:
                  type: string
                  format: decimal
                  example: 15000.00
                advancePayment:
                  type: string
                  format: decimal
                  example: 5000.00
                startDate:
                  type: string
                  format: date-time
                  example: "2025-02-18T10:00:00Z"
                endDate:
                  type: string
                  format: date-time
                  example: "2025-03-18T10:00:00Z"
                address:
                  type: string
                  example: "123 Main Street"
                projectManager:
                  type: string
                  example: "John Doe"
                constructionManager:
                  type: string
                  example: "Jane Smith"
                technicalManager:
                  type: string
                  example: "Alex Brown"
                cnceCode:
                  type: string
                  example: "CNCE-789"
                cap:
                  type: string
                  example: "CAP-101"
                cig:
                  type: string
                  example: "CIG-102"
                cup:
                  type: string
                  example: "CUP-103"
                iva:
                  type: string
                  example: 18.00
                dipositRecovery:
                  type: string
                  example: 100.00
                withholdingAmount:
                  type: string
                  example: 200.00
                contract:
                  type: string
                  example: "path/to/contract.pdf"
                permission_to_build:
                  type: string
                  example: "path/to/permission_to_build.pdf"
                psc:
                  type: string
                  example: "path/to/psc.pdf"
                pos:
                  type: string
                  example: "path/to/pos.pdf"
                desc_pos:
                  type: string
                  example: "lorem ipsum"
                desc_psc:
                  type: string
                  example: "lorem ipsum"
                desc_permission_to_build:
                  type: string
                  example: "lorem ipsum"
                desc_contract:
                  type: string
                  example: "lorem ipsum"
                add_additional_1:
                   type: string
                   example: "path/to/add_additional_1.pdf"
                add_additional_2:
                   type: string
                   example: "path/to/add_additional_2.pdf"
                add_additional_3:
                   type: string
                   example: "path/to/add_additional_3.pdf"
                add_additional_4: 
                   type: string
                   example: "path/to/add_additional_4.pdf"
                desc_additional_1: 
                   type: string
                   example: "lorem ipsum"
                desc_additional_2: 
                   type: string
                   example: "lorem ipsum"
                desc_additional_3: 
                   type: string
                   example: "lorem ipsum"
                desc_additional_4: 
                   type: string
                   example: "lorem ipsum"
                isPublic:
                  type: boolean
                  example: true
      responses:
        200:
          description: order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "order created successfully"
                  data:
                    type: object
                    properties:
                      order:
                        type: object
                        properties:
                          id:
                            type: string
                            example: 1161573e-bdf6-42cc-a7c1-4f6c84c99b21
                          code:
                            type: string
                            example: ORD123456
                          description:
                            type: string
                            example: "Order description here"
                          workAmount:
                            type: number
                            format: decimal
                            example: 15000.00
                          advancePayment:
                            type: number
                            format: decimal
                            example: 5000.00
                          startDate:
                            type: string
                            format: date-time
                            example: "2025-02-18T10:00:00Z"
                          endDate:
                            type: string
                            format: date-time
                            example: "2025-03-18T10:00:00Z"
                          province:
                            type: string
                            example: "California"
                          nation:
                            type: string
                            example: "United States"
                          address:
                            type: string
                            example: "123 Main Street"
                          common:
                            type: string
                            example: "1234"
                          orderManager:
                            type: string
                            example: "John Doe"
                          siteManager:
                            type: string
                            example: "Jane Smith"
                          technicalManager:
                            type: string
                            example: "Alex Brown"
                          cnceCode:
                            type: string
                            example: "CNCE-789"
                          cap:
                            type: string
                            example: "CAP-101"
                          cig:
                            type: string
                            example: "CIG-102"
                          cup:
                            type: string
                            example: "CUP-103"
                          iva:
                            type: number
                            example: 18.00
                          discountPercentage:
                            type: number
                            example: 5.00
                          dipositRecovery:
                            type: number
                            example: 100.00
                          vat:
                            type: number
                            example: 12.00
                          withholdingAmount:
                            type: number
                            example: 200.00
                          attachment:
                            type: string
                            example: "path/to/contract.pdf"
                          isPublic:
                            type: boolean
                            example: true
                          createdAt:
                            type: string
                            example: "2025-02-12 18:14:47.456"
                          updatedAt:
                            type: string
                            example: "2025-02-11 22:19:34.99"
        401:
          description: Missing or invalid token / Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Verification Expired"
                  status:
                    type: boolean
                    example: false
        403:
          description: Forbidden. Only admins are allowed to update orders.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden: You do not have the required permissions"
        400:
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Missing Required Fields"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"

  /api/order/:
    get:
      summary: Get all available orders up to 10
      description: Retrieves a list of orders from the order table, filtered by the adminId of the authenticated user, with a limit of 10 orders per request.
      tags:
        - Order
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successfully fetched all orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All orders fetched"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 1161573e-bdf6-42cc-a7c1-4f6c84c99b21
                        code:
                          type: string
                          example: ORD123456
                        description:
                          type: string
                          example: "Order description here"
                        workAmount:
                          type: number
                          format: decimal
                          example: 15000.00
                        advancePayment:
                          type: number
                          format: decimal
                          example: 5000.00
                        startDate:
                          type: string
                          format: date-time
                          example: "2025-02-18T10:00:00Z"
                        endDate:
                          type: string
                          format: date-time
                          example: "2025-03-18T10:00:00Z"
                        province:
                          type: string
                          example: "California"
                        nation:
                          type: string
                          example: "United States"
                        address:
                          type: string
                          example: "123 Main Street"
                        common:
                          type: string
                          example: "1234"
                        orderManager:
                          type: string
                          example: "John Doe"
                        siteManager:
                          type: string
                          example: "Jane Smith"
                        technicalManager:
                          type: string
                          example: "Alex Brown"
                        cnceCode:
                          type: string
                          example: "CNCE-789"
                        cap:
                          type: string
                          example: "CAP-101"
                        cig:
                          type: string
                          example: "CIG-102"
                        cup:
                          type: string
                          example: "CUP-103"
                        iva:
                          type: number
                          example: 18.00
                        discountPercentage:
                          type: number
                          example: 5.00
                        dipositRecovery:
                          type: number
                          example: 100.00
                        vat:
                          type: number
                          example: 12.00
                        withholdingAmount:
                          type: number
                          example: 200.00
                        attachment:
                          type: string
                          example: "path/to/contract.pdf"
                        isPublic:
                          type: boolean
                          example: true
                        status:
                          type: string
                          enum:
                            - "In attesa"
                            - "In corso"
                            - "Completato"
                            - "Cancellato"
                          default: "In attesa"
                        createdAt:
                          type: string
                          example: "2025-02-12 18:14:47.456"
                        updatedAt:
                          type: string
                          example: "2025-02-11 22:19:34.99"
        403:
          description: Forbidden. Only admins are allowed to update orders.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden: You do not have the required permissions"
        404:
          description: No orders available for the given admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No current orders"
                  data:
                    type: array
                    items:
                      type: object
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
      parameters:
        - name: token
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"

  /api/order/getUsers:
    get:
      summary: Retrieve associated users for the authenticated admin.
      tags:
        - Order
      description: |
        This endpoint retrieves the associated clients, suppliers, and employees for the authenticated admin user.
        The employees are categorized by their roles (Technical_Manager, Construction_Manager, Order_Manager).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful retrieval of associated users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  clients:
                    type: array
                    items:
                      type: object
                      properties:
                        companyName:
                          type: string
                  suppliers:
                    type: array
                    items:
                      type: object
                      properties:
                        companyName:
                          type: string
                  employees:
                    type: object
                    properties:
                      Technical_Manager:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            role:
                              type: string
                            surname:
                              type: string
                      Construction_Manager:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            role:
                              type: string
                            surname:
                              type: string
                      Order_Manager:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            role:
                              type: string
                            surname:
                              type: string
        '401':
          description: Unauthorized. Authentication failed or user is not authorized.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/order/{id}:
    get:
      summary: Get a specific order by ID
      description: Retrieves a single order from the order table based on the provided order ID.
      tags:
        - Order
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The ID of the order to retrieve
          required: true
          schema:
            type: string
          example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
        - name: token
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      responses:
        200:
          description: Successfully fetched the order
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: updated successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 1161573e-bdf6-42cc-a7c1-4f6c84c99b21
                      code:
                        type: string
                        example: ORD123456
                      description:
                        type: string
                        example: "Order description here"
                      workAmount:
                        type: number
                        format: decimal
                        example: 15000.00
                      advancePayment:
                        type: number
                        format: decimal
                        example: 5000.00
                      startDate:
                        type: string
                        format: date-time
                        example: "2025-02-18T10:00:00Z"
                      endDate:
                        type: string
                        format: date-time
                        example: "2025-03-18T10:00:00Z"
                      province:
                        type: string
                        example: "California"
                      nation:
                        type: string
                        example: "United States"
                      address:
                        type: string
                        example: "123 Main Street"
                      common:
                        type: string
                        example: "1234"
                      orderManager:
                        type: string
                        example: "John Doe"
                      siteManager:
                        type: string
                        example: "Jane Smith"
                      technicalManager:
                        type: string
                        example: "Alex Brown"
                      cnceCode:
                        type: string
                        example: "CNCE-789"
                      cap:
                        type: string
                        example: "CAP-101"
                      cig:
                        type: string
                        example: "CIG-102"
                      cup:
                        type: string
                        example: "CUP-103"
                      iva:
                        type: number
                        example: 18.00
                      discountPercentage:
                        type: number
                        example: 5.00
                      dipositRecovery:
                        type: number
                        example: 100.00
                      vat:
                        type: number
                        example: 12.00
                      withholdingAmount:
                        type: number
                        example: 200.00
                      attachment:
                        type: string
                        example: "path/to/contract.pdf"
                      isPublic:
                        type: boolean
                        example: true
                      status:
                        type: string
                        enum:
                          - "In attesa"
                          - "In corso"
                          - "Completato"
                          - "Cancellato"
                        default: "In attesa"
                      createdAt:
                        type: string
                        example: "2025-02-12 18:14:47.456"
                      updatedAt:
                        type: string
                        example: "2025-02-11 22:19:34.99"
        403:
          description: Forbidden. Only admins are allowed to update orders.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden: You do not have the required permissions"
        404:
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Order not found"
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/order/update/{id}:
    patch:
      summary: Update a specific order by ID
      description: Updates the details of an existing order by its ID. Only admins can update orders.
      tags:
        - Order
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The ID of the order to update
          required: true
          schema:
            type: string
          example: 1161573e-bdf6-42cc-a7c1-4f6c84c99b21
        - name: token
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderDetails:
                  type: string
                  description: The updated details of the order
                status:
                  type: string
                  description: The new status of the order (e.g., "pending", "Completato")
              example:
                orderDetails: "Updated order details"
                status: "Completato"
      responses:
        200:
          description: Successfully updated the order
          content:
            application/json:
              schema:
                properties:
                  order:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 1161573e-bdf6-42cc-a7c1-4f6c84c99b21
                      code:
                        type: string
                        example: ORD123456
                      description:
                        type: string
                        example: "Order description here"
                      workAmount:
                        type: number
                        format: decimal
                        example: 15000.00
                      advancePayment:
                        type: number
                        format: decimal
                        example: 5000.00
                      startDate:
                        type: string
                        format: date-time
                        example: "2025-02-18T10:00:00Z"
                      endDate:
                        type: string
                        format: date-time
                        example: "2025-03-18T10:00:00Z"
                      province:
                        type: string
                        example: "California"
                      nation:
                        type: string
                        example: "United States"
                      address:
                        type: string
                        example: "123 Main Street"
                      common:
                        type: string
                        example: "1234"
                      orderManager:
                        type: string
                        example: "John Doe"
                      siteManager:
                        type: string
                        example: "Jane Smith"
                      technicalManager:
                        type: string
                        example: "Alex Brown"
                      cnceCode:
                        type: string
                        example: "CNCE-789"
                      cap:
                        type: string
                        example: "CAP-101"
                      cig:
                        type: string
                        example: "CIG-102"
                      cup:
                        type: string
                        example: "CUP-103"
                      iva:
                        type: number
                        example: 18.00
                      discountPercentage:
                        type: number
                        example: 5.00
                      dipositRecovery:
                        type: number
                        example: 100.00
                      vat:
                        type: number
                        example: 12.00
                      withholdingAmount:
                        type: number
                        example: 200.00
                      attachment:
                        type: string
                        example: "path/to/contract.pdf"
                      isPublic:
                        type: boolean
                        example: true
                      status:
                        type: string
                        enum:
                          - "In attesa"
                          - "In corso"
                          - "Completato"
                          - "Cancellato"
                        default: "In attesa"
                      createdAt:
                        type: string
                        example: "2025-02-12 18:14:47.456"
                      updatedAt:
                        type: string
                        example: "2025-02-11 22:19:34.99"
                  message:
                    type: string
                    example: "Updated successfully"
        400:
          description: Invalid request or missing data in request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ID not found"
        403:
          description: Forbidden. Only admins are allowed to update orders.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden: You do not have the required permissions"
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/order/delete:
    delete:
      summary: delete order,orders from the database
      description: delete an order or orders by authenticating admin id then find the ids from the req.body and perform query of deleteMany()
      security:
        - bearerAuth: []
      tags:
        - Order
      parameters:
        - name: token
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ids
              properties:
                ids:
                  type: array
                  items:
                    type: string
                  example:
                    [
                      "1161573e-bdf6-42cc-a7c1-4f6c84c99b21",
                      "2234567e-bdf6-42cc-a7c1-4f6c84c99b22",
                    ]

      responses:
        200:
          description: Order deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Order deleted!"
                  status:
                    type: boolean
                    example: true
        400:
          description: ids not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ids not found"
        403:
          description: Forbidden. Only admins are allowed to update orders.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden: You do not have the required permissions"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"

  /api/order/search:
    get:
      summary: Search for a specific order by code
      description: Searches for an order using the order code. Only admins can search for orders.
      tags:
        - Order
      security:
        - bearerAuth: []
      parameters:
        - name: code
          in: query
          description: The unique order code used to search for an order
          required: true
          schema:
            type: string
          example: "ORD12345"
        - name: token
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      responses:
        200:
          description: Successfully found the order
          content:
            application/json:
              schema:
                properties:
                  order:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 1161573e-bdf6-42cc-a7c1-4f6c84c99b21
                      code:
                        type: string
                        example: ORD123456
                      description:
                        type: string
                        example: "Order description here"
                      workAmount:
                        type: number
                        format: decimal
                        example: 15000.00
                      advancePayment:
                        type: number
                        format: decimal
                        example: 5000.00
                      startDate:
                        type: string
                        format: date-time
                        example: "2025-02-18T10:00:00Z"
                      endDate:
                        type: string
                        format: date-time
                        example: "2025-03-18T10:00:00Z"
                      province:
                        type: string
                        example: "California"
                      nation:
                        type: string
                        example: "United States"
                      address:
                        type: string
                        example: "123 Main Street"
                      common:
                        type: string
                        example: "1234"
                      orderManager:
                        type: string
                        example: "John Doe"
                      siteManager:
                        type: string
                        example: "Jane Smith"
                      technicalManager:
                        type: string
                        example: "Alex Brown"
                      cnceCode:
                        type: string
                        example: "CNCE-789"
                      cap:
                        type: string
                        example: "CAP-101"
                      cig:
                        type: string
                        example: "CIG-102"
                      cup:
                        type: string
                        example: "CUP-103"
                      iva:
                        type: number
                        example: 18.00
                      discountPercentage:
                        type: number
                        example: 5.00
                      dipositRecovery:
                        type: number
                        example: 100.00
                      vat:
                        type: number
                        example: 12.00
                      withholdingAmount:
                        type: number
                        example: 200.00
                      attachment:
                        type: string
                        example: "path/to/contract.pdf"
                      isPublic:
                        type: boolean
                        example: true
                      status:
                        type: string
                        enum:
                          - "In attesa"
                          - "In corso"
                          - "Completato"
                          - "Cancellato"
                        default: "In attesa"
                      createdAt:
                        type: string
                        example: "2025-02-12 18:14:47.456"
                      updatedAt:
                        type: string
                        example: "2025-02-11 22:19:34.99"
        404:
          description: Order not found for the given code
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Not found"
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/order/archive/{id}:
    patch:
        summary: Archive or unarchive a specific order by ID
        description: Archives or unarchives an order by toggling the `archieved` status. If the order is already archived, it will be unarchived. Only admins can perform this action.
        tags:
          - Order
        security:
          - bearerAuth: []
        parameters:
          - name: id
            in: path
            description: The unique ID of the order to be archived or unarchived
            required: true
            schema:
              type: string
            example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
          - name: token
            in: cookie
            description: Bearer token stored in cookies for authentication
            required: true
            schema:
              type: string
            example: "Bearer <token>"
        responses:
          "200":
            description: Successfully archived or unarchived the order
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Order archived!" # or "Order unarchived!" depending on the action
          "400":
            description: Bad request - Missing or invalid order ID
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Bad request"
          "401":
            description: Unauthorized - Missing or invalid authentication token
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Unauthorized"
          "404":
            description: Order not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Order not found"
          "500":
            description: Internal server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Internal Server Error"

  /api/order/recentOrder:
    get:
      summary: Fetch recent orders
      description: Fetch the most recent 10 orders created today for the authenticated admin user.
      tags:
          - Order
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully fetched recent orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All Recent Orders fetched"
                  data:
                    type: array
                    items:
                       type: object
                       properties:
                        id:
                          type: string
                          example: 1161573e-bdf6-42cc-a7c1-4f6c84c99b21
                        code:
                          type: string
                          example: ORD123456
                        description:
                          type: string
                          example: "Order description here"
                        workAmount:
                          type: number
                          format: decimal
                          example: 15000.00
                        advancePayment:
                          type: number
                          format: decimal
                          example: 5000.00
                        startDate:
                          type: string
                          format: date-time
                          example: "2025-02-18T10:00:00Z"
                        endDate:
                          type: string
                          format: date-time
                          example: "2025-03-18T10:00:00Z"
                        province:
                          type: string
                          example: "California"
                        nation:
                          type: string
                          example: "United States"
                        address:
                          type: string
                          example: "123 Main Street"
                        common:
                          type: string
                          example: "1234"
                        orderManager:
                          type: string
                          example: "John Doe"
                        siteManager:
                          type: string
                          example: "Jane Smith"
                        technicalManager:
                          type: string
                          example: "Alex Brown"
                        cnceCode:
                          type: string
                          example: "CNCE-789"
                        cap:
                          type: string
                          example: "CAP-101"
                        cig:
                          type: string
                          example: "CIG-102"
                        cup:
                          type: string
                          example: "CUP-103"
                        iva:
                          type: number
                          example: 18.00
                        discountPercentage:
                          type: number
                          example: 5.00
                        dipositRecovery:
                          type: number
                          example: 100.00
                        vat:
                          type: number
                          example: 12.00
                        withholdingAmount:
                          type: number
                          example: 200.00
                        attachment:
                          type: string
                          example: "path/to/contract.pdf"
                        isPublic:
                          type: boolean
                          example: true
                        status:
                          type: string
                          enum:
                            - "In attesa"
                            - "In corso"
                            - "Completato"
                            - "Cancellato"
                          default: "In attesa"
                        createdAt:
                          type: string
                          example: "2025-02-12 18:14:47.456"
                        updatedAt:
                          type: string
                          example: "2025-02-11 22:19:34.99"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error occurred"

  /api/order/archive:
    get:
      summary: Retrieve all archived orders
      description: Fetches all archived orders for the authenticated admin.
      tags:
        - Order
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successfully retrieved archived orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "found"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                        adminId:
                          type: string
                          example: "admin123"
                        archieved:
                          type: boolean
                          example: true
                        createdAt:
                          type: string
                          format: date-time
                          example: "2024-02-19T10:30:00Z"
        401:
          description: Unauthorized - Missing or invalid authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        404:
          description: No archived orders found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No archived orders"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"

  /api/order/update/orderSeq:
    patch:
      summary: Update the order sequence
      description: Allows an admin to update the order sequence with a list of added and visible columns.
      tags:
        - Order
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - addedColArray
                - visibleColArray
                - archiveAddedColArray
                - archiveVisibleColArray
              properties:
                addedColArray:
                  type: array
                  items:
                    type: string
                  example:
                    [
                      "state",
                      "description",
                      "technicalManager",
                      "workAmount",
                      "...",
                    ]
                visibleColArray:
                  type: array
                  items:
                    type: string
                  example:
                    ["orderManager", "startDate", "endDate", "isPublic", "..."]
      responses:
        "200":
          description: Sequence updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "sequence updated!"
        "400":
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "missing required fields"
        "406":
          description: Invalid type provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid type"
        "422":
          description: Invalid fields found in the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid fields found: invalidField1, invalidField2"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"
  
  /api/order/get/orderSeq:
    get:
      summary: Get the order sequence for an admin
      description: Fetches the order sequence for an admin based on their role.
      tags:
        - Order
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successfully retrieved order sequence
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: 
                      - "description"
                      - "siteManager"
                      - "orderManager"
                      - "cnceCode"
                      - "...."
                  message:
                    type: string
                    example: "found"
        "404":
          description: No order sequence found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No order sequence found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error message"

  # customer APIs
  /api/customer/create:
    post:
      summary: Create a customer from admin
      description: Create a new customer using admin authentication. The request must contain all required fields.
      security:
        - bearerAuth: []
      tags:
        - Customer
      parameters:
        - name: token
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - companyName
                - vat
                - taxId
                - ateco
                - nation
                - province
                - address
                - common
                - cap
                - pec
                - email
                - telephone
              properties:
                companyName:
                  type: string
                  example: "Tech Solutions"
                vat:
                  type: string
                  example: "IT123456789"
                taxId:
                  type: string
                  example: "TAX123456"
                ateco:
                  type: string
                  example: "6201"
                nation:
                  type: string
                  example: "Italy"
                province:
                  type: string
                  example: "Lombardy"
                address:
                  type: string
                  example: "Via Roma 123"
                common:
                  type: string
                  example: "Milan"
                cap:
                  type: string
                  example: "20100"
                pec:
                  type: string
                  example: "customer@pec.it"
                email:
                  type: string
                  format: email
                  example: "customer@example.com"
                telephone:
                  type: string
                  example: "+39 123 456 7890"
      responses:
        200:
          description: Customer created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Customer created"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                      email:
                        type: string
                        example: "customer@example.com"
                      companyName:
                        type: string
                        example: "Tech Solutions"
                      vat:
                        type: string
                        example: "IT123456789"
                      taxId:
                        type: string
                        example: "TAX123456"
                      ateco:
                        type: string
                        example: "6201"
                      nation:
                        type: string
                        example: "Italy"
                      province:
                        type: string
                        example: "Lombardy"
                      address:
                        type: string
                        example: "Via Roma 123"
                      common:
                        type: string
                        example: "Milan"
                      cap:
                        type: string
                        example: "20100"
                      pec:
                        type: string
                        example: "customer@pec.it"
                      telephone:
                        type: string
                        example: "+39 123 456 7890"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"
        400:
          description: Customer already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Customer already exists"
        404:
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Missing required field: email"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/customer/:
    get:
      summary: Get all registered customers (up to 10)
      description: Fetches up to 10 customers associated with the authenticated admin.
      security:
        - bearerAuth: []
      tags:
        - Customer
      parameters:
        - name: token
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      responses:
        200:
          description: Successfully fetched customers
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All users fetched"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                        email:
                          type: string
                          example: "customer@example.com"
                        companyName:
                          type: string
                          example: "Tech Solutions"
                        vat:
                          type: string
                          example: "IT123456789"
                        taxId:
                          type: string
                          example: "TAX123456"
                        ateco:
                          type: string
                          example: "6201"
                        nation:
                          type: string
                          example: "Italy"
                        province:
                          type: string
                          example: "Lombardy"
                        address:
                          type: string
                          example: "Via Roma 123"
                        common:
                          type: string
                          example: "Milan"
                        cap:
                          type: string
                          example: "20100"
                        pec:
                          type: string
                          example: "customer@pec.it"
                        telephone:
                          type: string
                          example: "+39 123 456 7890"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-02-18T12:34:56.789Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2025-02-18T12:34:56.789Z"
        404:
          description: No customers found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No user found"
                  data:
                    type: array
                    example: []
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/customer/{id}:
    get:
      summary: Get a single customer by ID
      description: Fetches a customer based on the provided ID. Only accessible to admins.
      security:
        - bearerAuth: []
      tags:
        - Customer
      parameters:
        - name: token
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
        - name: id
          in: path
          description: Unique ID of the customer
          required: true
          schema:
            type: string
            example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
      responses:
        200:
          description: Successfully fetched customer
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "successfully get a user"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                      email:
                        type: string
                        example: "customer@example.com"
                      companyName:
                        type: string
                        example: "Tech Solutions"
                      vat:
                        type: string
                        example: "IT123456789"
                      taxId:
                        type: string
                        example: "TAX123456"
                      ateco:
                        type: string
                        example: "6201"
                      nation:
                        type: string
                        example: "Italy"
                      province:
                        type: string
                        example: "Lombardy"
                      address:
                        type: string
                        example: "Via Roma 123"
                      common:
                        type: string
                        example: "Milan"
                      cap:
                        type: string
                        example: "20100"
                      pec:
                        type: string
                        example: "customer@pec.it"
                      telephone:
                        type: string
                        example: "+39 123 456 7890"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"
        404:
          description: Customer not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "not found"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/customer/createMany:
    post:
      summary: Create Multiple Customers
      tags:
        - Customer
      description: Adds multiple customers under the authenticated admin while ensuring all required fields are present.
      security:
        - BearerAuth: []
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token for authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customers:
                  type: array
                  items:
                    type: object
                    properties:
                      companyName:
                        type: string
                      vat:
                        type: string
                      taxId:
                        type: string
                      nation:
                        type: string
                      province:
                        type: string
                      common:
                        type: string
                      cap:
                        type: string
                      address:
                        type: string
                      pec:
                        type: string
                      email:
                        type: string
                        format: email
                      telephone:
                        type: string
                  example:
                    - companyName: "Tech Corp"
                      vat: "VAT12345"
                      taxId: "TAX98765"
                      nation: "USA"
                      province: "California"
                      common: "Los Angeles"
                      cap: "90001"
                      address: "123 Silicon Valley, CA"
                      pec: "techcorp@pec.com"
                      email: "contact@techcorp.com"
                      telephone: "+1234567890"
      responses:
        200:
          description: Customers successfully added.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "customers added: 5"
        400:
          description: Bad request due to missing fields or duplicate customers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "A customer is missing required fields: taxId, telephone"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/customer/update/{id}:
    patch:
      summary: Update customer details
      description: Updates an existing customer's details based on the provided ID. Only accessible to admins.
      security:
        - bearerAuth: []
      tags:
        - Customer
      parameters:
        - name: token
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
        - name: id
          in: path
          description: Unique ID of the customer
          required: true
          schema:
            type: string
            example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                  example: "Tech Solutions"
                vat:
                  type: string
                  example: "IT123456789"
                taxId:
                  type: string
                  example: "TAX123456"
                ateco:
                  type: string
                  example: "6201"
                nation:
                  type: string
                  example: "Italy"
                province:
                  type: string
                  example: "Lombardy"
                address:
                  type: string
                  example: "Via Roma 123"
                common:
                  type: string
                  example: "Milan"
                cap:
                  type: string
                  example: "20100"
                pec:
                  type: string
                  example: "customer@pec.it"
                telephone:
                  type: string
                  example: "+39 123 456 7890"
                createdAt:
                  type: string
                  format: date-time
                  example: "2025-02-18T12:34:56.789Z"
                updatedAt:
                  type: string
                  format: date-time
                  example: "2025-02-18T12:34:56.789Z"
      responses:
        200:
          description: Customer updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "updated successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                      email:
                        type: string
                        example: "customer@example.com"
                      companyName:
                        type: string
                        example: "Tech Solutions"
                      vat:
                        type: string
                        example: "IT123456789"
                      taxId:
                        type: string
                        example: "TAX123456"
                      ateco:
                        type: string
                        example: "6201"
                      nation:
                        type: string
                        example: "Italy"
                      province:
                        type: string
                        example: "Lombardy"
                      address:
                        type: string
                        example: "Via Roma 123"
                      common:
                        type: string
                        example: "Milan"
                      cap:
                        type: string
                        example: "20100"
                      pec:
                        type: string
                        example: "customer@pec.it"
                      telephone:
                        type: string
                        example: "+39 123 456 7890"
        404:
          description: Customer ID not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "id not found"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/customer/delete:
    delete:
      summary: Delete multiple customers
      description: Deletes multiple customers based on the provided IDs. Only accessible to admins.
      security:
        - bearerAuth: []
      tags:
        - Customer
      parameters:
        - name: token
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ids
              properties:
                ids:
                  type: array
                  items:
                    type: string
                  example:
                    - "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                    - "223e4567-e89b-12d3-a456-426614174000"
      responses:
        200:
          description: Customers deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Customer deleted!"
        400:
          description: Bad request (missing IDs in body)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Bad request"
        404:
          description: IDs not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ids not found"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/customer/search:
    get:
      summary: Search customers by company name
      description: This endpoint allows searching for customers by their company name. Only accessible to admins.
      security:
        - bearerAuth: []
      tags:
        - Customer
      parameters:
        - name: token
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
        - name: companyName
          in: query
          description: The company name of the customer to search for
          required: true
          schema:
            type: string
            example: "ABC Corp"
      responses:
        200:
          description: Customer(s) found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "customer found successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                      email:
                        type: string
                        example: "customer@example.com"
                      companyName:
                        type: string
                        example: "Tech Solutions"
                      vat:
                        type: string
                        example: "IT123456789"
                      taxId:
                        type: string
                        example: "TAX123456"
                      ateco:
                        type: string
                        example: "6201"
                      nation:
                        type: string
                        example: "Italy"
                      province:
                        type: string
                        example: "Lombardy"
                      address:
                        type: string
                        example: "Via Roma 123"
                      common:
                        type: string
                        example: "Milan"
                      cap:
                        type: string
                        example: "20100"
                      pec:
                        type: string
                        example: "customer@pec.it"
                      telephone:
                        type: string
                        example: "+39 123 456 7890"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"
        400:
          description: "Missing required query parameter: companyName"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "missing required query field: companyName"
        404:
          description: Customer not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "customer not found"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/customer/update/custSeq:
    patch:
      summary: Update customer sequence for an admin
      description: Updates the customer sequence settings (added and visible columns) for the admin user.
      tags:
        - Customer
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - addedColArray
                - visibleColArray
              properties:
                addedColArray:
                  type: array
                  items:
                    type: string
                  description: List of added column names.
                  example: ["nation", "companyName", "vatNumber", "..."]
                visibleColArray:
                  type: array
                  items:
                    type: string
                  description: List of visible column names.
                  example: ["phoneNumber", "emailAddress", "..."]
      responses:
        200:
          description: Customer sequence updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "sequence updated!"
        400:
          description: Missing required fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "missing required fields"
        406:
          description: Invalid input type.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid type"
        422:
          description: Invalid fields provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid fields found: invalidField1, invalidField2"
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

  /api/customer/get/custSeq:
    get:
      summary: Get the customer sequence for an admin
      description: Fetches the customer sequence for an admin based on their role.
      tags:
        - Customer
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successfully retrieved customer sequence
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: 
                      - "nation"
                      - "companyName"
                      - "province"
                      - "zipCode"
                      - "..."
                  message:
                    type: string
                    example: "found"
        "404":
          description: No order sequence found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No order sequence found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error message"

  # supplier APIs
  /api/supplier/create:
    post:
      summary: Create a new supplier from admin
      description: This endpoint allows an admin to create a new supplier by providing the required details.
      security:
        - bearerAuth: []
      tags:
        - Supplier
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: "Bearer token for authentication. Example: 'Bearer YOUR_TOKEN'"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - companyName
                - vat
                - taxId
                - ateco
                - nation
                - province
                - address
                - common
                - cap
                - pec
                - telephone
              properties:
                email:
                  type: string
                  format: email
                  example: "supplier@example.com"
                companyName:
                  type: string
                  example: "ABC Suppliers Ltd."
                vat:
                  type: string
                  example: "VAT123456"
                taxId:
                  type: string
                  example: "TAX789012"
                ateco:
                  type: string
                  example: "47.91.10"
                nation:
                  type: string
                  example: "Italy"
                province:
                  type: string
                  example: "Milan"
                address:
                  type: string
                  example: "123 Supplier Street"
                common:
                  type: string
                  example: "Milan"
                cap:
                  type: string
                  example: "20100"
                pec:
                  type: string
                  example: "supplier@pec.com"
                telephone:
                  type: string
                  example: "+39 012 345 6789"

      responses:
        200:
          description: Supplier created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "supplier created!"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                      email:
                        type: string
                        example: "supplier@example.com"
                      companyName:
                        type: string
                        example: "ABC Suppliers Ltd."
                      vat:
                        type: string
                        example: "VAT123456"
                      taxId:
                        type: string
                        example: "TAX789012"
                      ateco:
                        type: string
                        example: "47.91.10"
                      nation:
                        type: string
                        example: "Italy"
                      province:
                        type: string
                        example: "Milan"
                      address:
                        type: string
                        example: "123 Supplier Street"
                      common:
                        type: string
                        example: "Milan"
                      cap:
                        type: string
                        example: "20100"
                      pec:
                        type: string
                        example: "supplier@pec.com"
                      telephone:
                        type: string
                        example: "+39 012 345 6789"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"
        400:
          description: Supplier already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "supplier already there"
        404:
          description: Missing required field(s)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Missing required field: companyName"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/supplier/update/suppSeq:
    patch:
      summary: Update the supplier sequence
      description: Allows an admin to update the supplier sequence with a list of added and visible columns.
      tags:
        - Supplier
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - addedColArray
                - visibleColArray
              properties:
                addedColArray:
                  type: array
                  items:
                    type: string
                  example:
                    ["nation", "companyName", "vatNumber", "fiscalCode", "..."]
                visibleColArray:
                  type: array
                  items:
                    type: string
                  example: ["nation", "vatNumber", "fiscalCode", "..."]
      responses:
        "200":
          description: Sequence updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "sequence updated!"
        "400":
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "missing required fields"
        "406":
          description: Invalid type provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid type"
        "422":
          description: Invalid fields found in the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid fields found: invalidField1, invalidField2"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"

  /api/supplier/get/suppSeq:
    get:
      summary: Get the supplier sequence for an admin
      description: Fetches the supplier sequence for an admin based on their role.
      tags:
        - Supplier
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successfully retrieved order sequence
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: 
                      - "companyName"
                      - "fiscalCode"
                      - "province"
                      - "pecAddress"
                  message:
                    type: string
                    example: "found"
        "404":
          description: No order sequence found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No order sequence found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error message"

  /api/supplier/:
    get:
      summary: Get all registered suppliers (up to 10)
      description: Fetch a list of up to 10 suppliers.
      security:
        - bearerAuth: []
      tags:
        - Supplier
      parameters:
        - name: Authorization
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      responses:
        200:
          description: Successfully fetched all suppliers
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All supplier fetched"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                        email:
                          type: string
                          example: "supplier@example.com"
                        companyName:
                          type: string
                          example: "ABC Suppliers Ltd."
                        vat:
                          type: string
                          example: "VAT123456"
                        taxId:
                          type: string
                          example: "TAX789012"
                        ateco:
                          type: string
                          example: "47.91.10"
                        nation:
                          type: string
                          example: "Italy"
                        province:
                          type: string
                          example: "Milan"
                        address:
                          type: string
                          example: "123 Supplier Street"
                        common:
                          type: string
                          example: "Milan"
                        cap:
                          type: string
                          example: "20100"
                        pec:
                          type: string
                          example: "supplier@pec.com"
                        telephone:
                          type: string
                          example: "+39 012 345 6789"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-02-18T12:34:56.789Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2025-02-18T12:34:56.789Z"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/supplier/createMany:
    post:
      summary: Create Multiple Suppliers
      tags: 
        - Supplier
      description: Adds multiple suppliers under the authenticated admin while ensuring all required fields are present.
      security:
        - BearerAuth: []
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token for authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                suppliers:
                  type: array
                  items:
                    type: object
                    properties:
                      companyName:
                        type: string
                      vat:
                        type: string
                      taxId:
                        type: string
                      nation:
                        type: string
                      province:
                        type: string
                      common:
                        type: string
                      cap:
                        type: string
                      address:
                        type: string
                      pec:
                        type: string
                      email:
                        type: string
                        format: email
                      telephone:
                        type: string
                  example:
                    - companyName: "Supplier Corp"
                      vat: "VAT67890"
                      taxId: "TAX54321"
                      nation: "USA"
                      province: "New York"
                      common: "Brooklyn"
                      cap: "11201"
                      address: "456 Supply Street, NY"
                      pec: "suppliercorp@pec.com"
                      email: "contact@suppliercorp.com"
                      telephone: "+1987654321"
      responses:
        200:
          description: Suppliers successfully added.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "suppliers added: 5"
        400:
          description: Bad request due to missing fields or duplicate suppliers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "A supplier is missing required fields: taxId, telephone"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"


  /api/supplier/{id}:
    get:
      summary: Get a specific supplier by ID
      description: Fetch supplier details using a unique supplier ID.
      security:
        - bearerAuth: []
      tags:
        - Supplier
      parameters:
        - name: Authorization
          in: cookie
          description: Bearer token saved in the cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
        - name: id
          in: path
          description: Unique ID of the supplier to retrieve
          required: true
          schema:
            type: string
            example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
      responses:
        200:
          description: Successfully retrieved supplier details
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "supplier fetched"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                      email:
                        type: string
                        example: "supplier@example.com"
                      companyName:
                        type: string
                        example: "ABC Suppliers Ltd."
                      vat:
                        type: string
                        example: "VAT123456"
                      taxId:
                        type: string
                        example: "TAX789012"
                      ateco:
                        type: string
                        example: "47.91.10"
                      nation:
                        type: string
                        example: "Italy"
                      province:
                        type: string
                        example: "Milan"
                      address:
                        type: string
                        example: "123 Supplier Street"
                      common:
                        type: string
                        example: "Milan"
                      cap:
                        type: string
                        example: "20100"
                      pec:
                        type: string
                        example: "supplier@pec.com"
                      telephone:
                        type: string
                        example: "+39 012 345 6789"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"
        400:
          description: Missing supplier ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "id not found"
        404:
          description: Supplier not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "supplier not found"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/supplier/update/{id}:
    patch:
      summary: Update supplier details
      description: Updates supplier information based on the given ID.
      security:
        - bearerAuth: []
      tags:
        - Supplier
      parameters:
        - name: Authorization
          in: cookie
          description: Bearer token saved in cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
        - name: id
          in: path
          description: Unique ID of the supplier to update
          required: true
          schema:
            type: string
            example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "newsupplier@example.com"
                companyName:
                  type: string
                  example: "Updated ABC Suppliers Ltd."
                vat:
                  type: string
                  example: "NEWVAT123456"
                taxId:
                  type: string
                  example: "NEWTAX789012"
                ateco:
                  type: string
                  example: "47.91.20"
                nation:
                  type: string
                  example: "Italy"
                province:
                  type: string
                  example: "Rome"
                address:
                  type: string
                  example: "456 New Supplier Street"
                common:
                  type: string
                  example: "Rome"
                cap:
                  type: string
                  example: "00100"
                pec:
                  type: string
                  example: "updatedsupplier@pec.com"
                telephone:
                  type: string
                  example: "+39 098 765 4321"
      responses:
        200:
          description: Supplier updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "supplier updated"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                      email:
                        type: string
                        example: "newsupplier@example.com"
                      companyName:
                        type: string
                        example: "Updated ABC Suppliers Ltd."
                      vat:
                        type: string
                        example: "NEWVAT123456"
                      taxId:
                        type: string
                        example: "NEWTAX789012"
                      ateco:
                        type: string
                        example: "47.91.20"
                      nation:
                        type: string
                        example: "Italy"
                      province:
                        type: string
                        example: "Rome"
                      address:
                        type: string
                        example: "456 New Supplier Street"
                      common:
                        type: string
                        example: "Rome"
                      cap:
                        type: string
                        example: "00100"
                      pec:
                        type: string
                        example: "updatedsupplier@pec.com"
                      telephone:
                        type: string
                        example: "+39 098 765 4321"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"
        400:
          description: Bad request or invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid request data"
        404:
          description: Supplier not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "supplier not found"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/supplier/delete:
    delete:
      summary: Delete multiple suppliers
      description: Deletes multiple suppliers based on their IDs.
      security:
        - bearerAuth: []
      tags:
        - Supplier
      parameters:
        - name: Authorization
          in: cookie
          description: Bearer token saved in cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                  example:
                    - "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                    - "bb5e55e9-9336-45e3-a9c9-876de8f8902d"
      responses:
        200:
          description: Suppliers deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "supplier deleted!"
        400:
          description: Bad request (e.g., missing or invalid IDs)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Bad request"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/supplier/search:
    get:
      summary: Search for suppliers by company name
      description: Retrieves suppliers based on the provided company name.
      security:
        - bearerAuth: []
      tags:
        - Supplier
      parameters:
        - name: Authorization
          in: cookie
          description: Bearer token saved in cookies for authentication
          required: true
          schema:
            type: string
            example: "Bearer <token>"
        - name: companyName
          in: query
          description: The name of the supplier's company to search for.
          required: true
          schema:
            type: string
            example: "Tech Solutions Ltd"
      responses:
        200:
          description: Supplier(s) found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "found"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "1161573e-bdf6-42cc-a7c1-4f6c84c99b21"
                        email:
                          type: string
                          example: "supplier@example.com"
                        companyName:
                          type: string
                          example: "ABC Suppliers Ltd."
                        vat:
                          type: string
                          example: "VAT123456"
                        taxId:
                          type: string
                          example: "TAX789012"
                        ateco:
                          type: string
                          example: "47.91.10"
                        nation:
                          type: string
                          example: "Italy"
                        province:
                          type: string
                          example: "Milan"
                        address:
                          type: string
                          example: "123 Supplier Street"
                        common:
                          type: string
                          example: "Milan"
                        cap:
                          type: string
                          example: "20100"
                        pec:
                          type: string
                          example: "supplier@pec.com"
                        telephone:
                          type: string
                          example: "+39 012 345 6789"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-02-18T12:34:56.789Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2025-02-18T12:34:56.789Z"
        400:
          description: Missing query parameter `companyName`
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "query param 'companyName' is not found"
        404:
          description: No supplier found with the given company name
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "supplier not found"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
  
  # employee APIs
  /api/employee/create:
    post:
      summary: Create a new employee
      description: This endpoint allows an admin to create a new employee by providing the required details.
      security:
        - bearerAuth: []
      tags:
        - Employee
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: "Bearer token for authentication. Example: 'Bearer YOUR_TOKEN'"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - surname
                - taxId
                - contractorNo
                - sector
                - startDate
                - endDate
                - municipalityOfBirth
                - level
                - qualification
                - number
                - address
                - role
                - email
              properties:
                name:
                  type: string
                  example: "John"
                surname:
                  type: string
                  example: "Doe"
                taxId:
                  type: string
                  example: "123456789"
                contractorNo:
                  type: string
                  example: "CON12345"
                sector:
                  type: string
                  example: "IT"
                startDate:
                  type: string
                  format: date
                  example: "2025-02-01"
                endDate:
                  type: string
                  format: date
                  example: "2026-02-01"
                municipalityOfBirth:
                  type: string
                  example: "New York"
                level:
                  type: string
                  example: "Senior"
                qualification:
                  type: string
                  example: "Bachelor's in Computer Science"
                number:
                  type: string
                  example: "+1234567890"
                address:
                  type: string
                  example: "123 Main St, New York, USA"
                role:
                  type: string
                  example: "Technical_Manager"
                email:
                  type: string
                  format: email
                  example: "johndoe@example.com"

      responses:
        200:
          description: Employee created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "employee created"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "1a2b3c4d5e6f"
                      name:
                        type: string
                        example: "John"
                      surname:
                        type: string
                        example: "Doe"
                      email:
                        type: string
                        example: "johndoe@example.com"
        400:
          description: Employee already exists or missing required field(s)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "employee already exists"
        404:
          description: Missing required field(s)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Missing required field: name"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/employee/:
    get:
      summary: Get all employees
      description: This endpoint allows an admin to retrieve a paginated list of employees.
      security:
        - bearerAuth: []
      tags:
        - Employee
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: "Bearer token for authentication. Example: 'Bearer YOUR_TOKEN'"
        - in: query
          name: page
          required: false
          schema:
            type: integer
            example: 1
          description: "Page number for pagination. Default is 1."

      responses:
        200:
          description: Employees fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Employees fetched successfully"
                  page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "46e7e276-f7ea-4bae-9550-86c63c75ea01"
                        name:
                          type: string
                          example: "John"
                        surname:
                          type: string
                          example: "Doe"
                        email:
                          type: string
                          example: "johndoe@example.com"
                        role:
                          type: string
                          example: "Admin"
                        startDate:
                          type: string
                          format: date
                          example: "2025-02-01"
                        endDate:
                          type: string
                          format: date
                          example: "2026-02-01"

        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/employee/{id}:
    get:
      summary: Get an employee by ID
      description: This endpoint allows an admin to fetch details of a specific employee using their unique ID.
      security:
        - bearerAuth: []
      tags:
        - Employee
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: "Bearer token for authentication. Example: 'Bearer YOUR_TOKEN'"
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: "1a2b3c4d5e6f"
          description: "The unique identifier of the employee."

      responses:
        200:
          description: Employee fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "employee fetched"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "46e7e276-f7ea-4bae-9550-86c63c75ea01"
                      name:
                        type: string
                        example: "John"
                      surname:
                        type: string
                        example: "Doe"
                      email:
                        type: string
                        example: "johndoe@example.com"
                      role:
                        type: string
                        example: "Site_Manager"
                      startDate:
                        type: string
                        format: date
                        example: "2025-02-01"
                      endDate:
                        type: string
                        format: date
                        example: "2026-02-01"

        400:
          description: Missing ID field
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "missing id field"
        404:
          description: Employee not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "employee not found"

        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/employee/createMany:
    post:
      summary: Create Multiple Employees
      tags:
        - Employee 
      description: Adds multiple employees under the authenticated admin while ensuring all required fields are present and roles are valid.
      security:
        - BearerAuth: []
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token for authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                employees:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      surname:
                        type: string
                      nameAndsurname:
                        type: string
                      taxId:
                        type: string
                      telephone:
                        type: string
                      contractorNo:
                        type: string
                      sector:
                        type: string
                      startDate:
                        type: string
                        format: date
                      endDate:
                        type: string
                        format: date
                      municipalityOfBirth:
                        type: string
                      level:
                        type: string
                      qualification:
                        type: string
                      number:
                        type: string
                      address:
                        type: string
                      role:
                        type: string
                      email:
                        type: string
                        format: email
                  example:
                    - name: "John"
                      surname: "Doe"
                      nameAndsurname: "John Doe"
                      taxId: "123456789"
                      telephone: "+1234567890"
                      contractorNo: "CN-001"
                      sector: "IT"
                      startDate: "2025-01-01"
                      endDate: "2026-01-01"
                      municipalityOfBirth: "New York"
                      level: "Senior"
                      qualification: "Master's Degree"
                      number: "987654321"
                      address: "123 Main St, NY"
                      role: "Developer"
                      email: "johndoe@example.com"
      responses:
        200:
          description: Employees successfully added.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "employees added: 5"
        400:
          description: Bad request due to missing fields, invalid role, or duplicate employees.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An employee is missing required fields: taxId, telephone"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/employee/archieve:
    get:
      summary: Get Archived Employees
      tags:
       - Employee
      description: Retrieves a paginated list of archived employees for the authenticated admin.
      security:
        - BearerAuth: []
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token for authentication.
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
          description: The page number for paginated results (default is 1).
      responses:
        200:
          description: Successfully retrieved archived employees.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                    example: [ { "id": "123", "name": "John Doe", "archieved": "true" } ]
                  message:
                    type: string
                    example: "found"
        404:
          description: No archived employees found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No archived employees"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/employee/archieve/{id}:
     patch:
        summary: Archive or Unarchive an Employee
        tags:
          - Employee
        description: Toggles the archived status of an employee by their ID.
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
            description: The unique identifier of the employee.
        responses:
          200:
            description: Employee archived or unarchived successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "'Employee archieved!' or 'Employee unarchieved!'"
          400:
            description: Bad request if ID is missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Bad request"
          404:
            description: Employee not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Employee not found"
          500:
            description: Internal server error.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Internal server error"

  /api/employee/update/{id}:
    patch:
      summary: Update an existing employee
      description: This endpoint allows an admin to update an employee's details.
      security:
        - bearerAuth: []
      tags:
        - Employee
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: "Bearer token for authentication. Example: 'Bearer YOUR_TOKEN'"
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: "46e7e276-f7ea-4bae-9550-86c63c75ea01"
          description: "The unique identifier of the employee."

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John"
                surname:
                  type: string
                  example: "Doe"
                taxId:
                  type: string
                  example: "TAX123456"
                contractorNo:
                  type: string
                  example: "C987654"
                sector:
                  type: string
                  example: "IT"
                startDate:
                  type: string
                  format: date
                  example: "2025-02-01"
                endDate:
                  type: string
                  format: date
                  example: "2026-02-01"
                municipalityOfBirth:
                  type: string
                  example: "New York"
                level:
                  type: string
                  example: "Senior"
                qualification:
                  type: string
                  example: "Bachelor's in Computer Science"
                number:
                  type: string
                  example: "+1 234 567 8901"
                address:
                  type: string
                  example: "123 Main St, New York, NY"
                role:
                  type: string
                  example: "Order_Manager"
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"

      responses:
        200:
          description: Employee updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "updated!"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "46e7e276-f7ea-4bae-9550-86c63c75ea01"
                      name:
                        type: string
                        example: "John"
                      surname:
                        type: string
                        example: "Doe"
                      email:
                        type: string
                        example: "john.doe@example.com"
                      role:
                        type: string
                        example: "Admin"
                      startDate:
                        type: string
                        format: date
                        example: "2025-02-01"
                      endDate:
                        type: string
                        format: date
                        example: "2026-02-01"

        404:
          description: Employee not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "emp not found"

        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
                  description:
                    type: string
                    example: "Error details"

  /api/employee/delete:
    delete:
      summary: Delete multiple employees
      description: Deletes employees based on the provided list of IDs.
      tags:
        - Employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                  example:
                    [
                      "12b4555b-e551-4262-849d-08d32a504e35",
                      "ae1a2cc6-2a4c-42f3-914b-e1d1febdf35b",
                    ]
              required:
                - ids
      responses:
        200:
          description: Employees deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "deleted successfully"
        400:
          description: Missing or invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "missing ids"
        404:
          description: IDs not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ids not found"
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"

  /api/employee/update/empSeq:
    patch:
      summary: Update employee sequence
      description: Allows an admin to update the employee sequence with a list of added and visible columns.
      tags:
        - Employee
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - addedColArray
                - visibleColArray
                - archiveAddedColArray
                - archiveVisibleColArray
              properties:
                addedColArray:
                  type: array
                  items:
                    type: string
                  example:
                    ["firstName", "lastName", "birthPlace", "contractor", "homeAddress", "qualification", "..."]
                visibleColArray:
                  type: array
                  items:
                    type: string
                  example: ["firstName", "lastName", "phoneNumber", "emailAddress", "..."]
      responses:
        "200":
          description: Sequence updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "sequence updated!"
        "400":
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "missing required fields"
        "406":
          description: Invalid type provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid type"
        "422":
          description: Invalid fields found in the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid fields found: invalidField1, invalidField2"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"

  /api/employee/get/empSeq:
    get:
      summary: Get the employee sequence for an admin
      description: Fetches the employee sequence for an admin based on their role.
      tags:
        - Employee
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successfully retrieved order sequence
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: 
                      - "firstName"
                      - "lastName"
                      - "birthPlace"
                      - "endDate"
                  message:
                    type: string
                    example: "found"
        "404":
          description: No order sequence found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No order sequence found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error message"

  # unilav APIs
  /api/employee/unilav/{eid}:
    get:
      summary: Retrieve all Unilav records
      description: This endpoint allows an admin to fetch all associated employee Unilav records.
      security:
        - bearerAuth: []
      tags:
        - employee/unilav
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: "Bearer token for authentication. Example: 'Bearer YOUR_TOKEN'"
        - in: path
          name: eid   
          required: true
          schema:
            type: string
            description: "dynamic employee id"
      responses:
        200:
          description: Successfully fetched all Unilav records
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "abc123"
                    name:
                      type: string
                      example: "Unilav Record 1"
                    description:
                      type: string
                      example: "Details about the Unilav record"
                    createdAt:
                      type: string
                      format: date-time
                      example: "2025-02-18T12:34:56.789Z"
                    updatedAt:
                      type: string
                      format: date-time
                      example: "2025-02-18T12:34:56.789Z"

        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/employee/unilav/{id}:
    get:
      summary: Retrieve a specific Unilav record by ID
      description: This endpoint allows an admin to fetch details of a specific Unilav record.
      security:
        - bearerAuth: []
      tags:
        - employee/unilav
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: "Bearer token for authentication. Example: 'Bearer YOUR_TOKEN'"
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: "ID of the Unilav record to fetch."
            example: "abc123"

      responses:
        200:
          description: Successfully fetched the Unilav record
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "abc123"
                  name:
                    type: string
                    example: "Unilav Record 1"
                  description:
                    type: string
                    example: "Details about the Unilav record"
                  createdAt:
                    type: string
                    format: date-time
                    example: "2025-02-18T12:34:56.789Z"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2025-02-18T12:34:56.789Z"

        404:
          description: Unilav record not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "unilav not found"

        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/employee/unilav/create/{eid}:
    post:
      summary: Create a new Unilav record
      description: This endpoint allows an admin to create a new Unilav record by providing the required details.
      security:
        - bearerAuth: []
      tags:
        - employee/unilav
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: "Bearer token for authentication. Example: 'Bearer YOUR_TOKEN'"
        - in: path
          name: eid   
          required: true
          schema:
            type: string
            description: "dynamic employee id"

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - healthEligibility
                - expiryDate
                - dataRilascio
                - attachment
              properties:
                healthEligibility:
                  type: string
                  description: "Indicates if the employee is health eligible."
                  example: "Eligible"
                expiryDate:
                  type: string
                  format: date
                  description: "Expiration date of the Unilav record."
                  example: "2025-12-31"
                dataRilascio:
                  type: string
                  format: date
                  description: "Date of issuance."
                  example: "2024-01-01"
                attachment:
                  type: string
                  format: binary
                  description: "File to upload (PDF, image, etc.). The frontend must send this as `unilav`"

      responses:
        200:
          description: Successfully created a new Unilav record
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "created!"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "abc123"
                      healthEligibility:
                        type: string
                        example: "Eligible"
                      expiryDate:
                        type: string
                        format: date
                        example: "2025-12-31"
                      dataRilascio:
                        type: string
                        format: date
                        example: "2024-01-01"
                      attachment:
                        type: string
                        format: uri
                        example: "https://cloudinary.com/sample.pdf"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-02-18T12:34:56.789Z"

        400:
          description: Missing required field(s)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Missing required field: healthEligibility"

        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/employee/unilav/update/{id}:
    patch:
      summary: Update a Unilav record
      description: Updates a Unilav record with new data, including an optional file upload.
      tags:
        - employee/unilav
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the Unilav record to update.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                unilav:
                  type: string
                  format: file (pdf, doc, csv)
                  description: The file to upload (optional).
                healthEligibility:
                  type: string
                  description: health Eligibility.
                dataRilascio:
                  type: string
                  description: Release date.
                expiryDate:
                  type: string
                  description: Expiry date
      responses:
        "200":
          description: Successfully updated the Unilav record.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  attachment:
                    type: string
                    format: uri
                    description: URL of the uploaded file (if any).
                  otherField1:
                    type: string
                  otherField2:
                    type: string
        "400":
          description: Missing required parameters or invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  # seritia APIs
  /api/employee/seritia/create/{eid}:
    post:
      summary: Create a new Seritia record
      description: Creates a new Seritia record with required fields and an optional file upload.
      tags:
        - employee/seritia
      parameters:
        - in: path
          name: eid   
          required: true
          schema:
            type: string
            description: "dynamic employee id"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - healthEligibility
                - expiryDate
                - dataRilascio
                - attachment - with key value of `seritia`
              properties:
                healthEligibility:
                  type: string
                  description: Eligibility status for health.
                expiryDate:
                  type: string
                  format: date
                  description: Expiry date of the Seritia record.
                dataRilascio:
                  type: string
                  format: date
                  description: Issuance date of the Seritia record.
                attachment:
                  type: string
                  format: file (.pdf, .docs, .csv) etc
                  description: attachment - with key value of `seritia`
      responses:
        "200":
          description: Successfully created the Seritia record.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "created!"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      healthEligibility:
                        type: string
                      expiryDate:
                        type: string
                        format: date
                      dataRilascio:
                        type: string
                        format: date
                      attachment:
                        type: string
                        format: uri
                        description: URL of the uploaded file (if any).
        "400":
          description: Missing required field(s).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Missing required field: healthEligibility"
        "401":
          description: Unauthorized request (JWT required).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error."

  /api/employee/seritia/{eid}:
    get:
      summary: Retrieve all Seritia records
      description: This endpoint allows an admin to fetch all associated employee Seritia records, associated with the logged in employee
      security:
        - bearerAuth: []
      tags:
        - employee/seritia
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: "Bearer token for authentication. Example: 'Bearer YOUR_TOKEN'"
        - in: path
          name: eid   
          required: true
          schema:
            type: string
            description: "dynamic employee id"
      responses:
        200:
          description: Successfully fetched all Unilav records
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "abc123"
                    name:
                      type: string
                      example: "Unilav Record 1"
                    description:
                      type: string
                      example: "Details about the Unilav record"
                    createdAt:
                      type: string
                      format: date-time
                      example: "2025-02-18T12:34:56.789Z"
                    updatedAt:
                      type: string
                      format: date-time
                      example: "2025-02-18T12:34:56.789Z"

        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/employee/seritia/{id}:
    get:
      summary: Retrieve a specific Seritia record by ID
      description: This endpoint allows an admin to fetch details of a specific Seritia record.
      security:
        - bearerAuth: []
      tags:
        - employee/seritia
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: "Bearer token for authentication. Example: 'Bearer YOUR_TOKEN'"
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: "ID of the Unilav record to fetch."
            example: "abc123"

      responses:
        200:
          description: Successfully fetched the Unilav record
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "abc123"
                  name:
                    type: string
                    example: "Unilav Record 1"
                  description:
                    type: string
                    example: "Details about the Unilav record"
                  createdAt:
                    type: string
                    format: date-time
                    example: "2025-02-18T12:34:56.789Z"
                  updatedAt:
                    type: string
                    format: date-time
                    example: "2025-02-18T12:34:56.789Z"

        404:
          description: Unilav record not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "unilav not found"

        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/employee/seritia/update/{id}:
    patch:
      summary: Update a Seritia record
      description: Updates a Unilav record with new data, including an optional file upload.
      tags:
        - employee/seritia
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the Unilav record to update.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                unilav:
                  type: string
                  format: file (pdf, doc, csv)
                  description: The file to upload (optional).
                healthEligibility:
                  type: string
                expiryDate:
                  type: string
                dataRilascio:
                  type: string
      responses:
        "200":
          description: Successfully updated the Unilav record.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  attachment:
                    type: string
                    format: uri
                    description: URL of the uploaded file (if any).
                  otherField1:
                    type: string
                  otherField2:
                    type: string
        "400":
          description: Missing required parameters or invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  # formazone APIs
  /api/employee/formazone/create/{eid}:
    post:
      summary: Create a new Formazone record
      description: Creates a new Formazone record with required fields and an optional file upload.
      tags:
        - employee/formazone
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: eid   
          required: true
          schema:
            type: string
            description: "dynamic employee id"  
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - training
                - expiryDate
                - dataRilascio
                - attachment - with key value of `formazone`
              properties:
                training:
                  type: string
                  description: The type of training for Formazone.
                expiryDate:
                  type: string
                  format: date
                  description: Expiry date of the Formazone record.
                dataRilascio:
                  type: string
                  format: date
                  description: Issuance date of the Formazone record.
                attachment:
                  type: string
                  format: file (.pdf, .docs, .csv) etc
                  description: attachment - with key value of `formazone`
      responses:
        "200":
          description: Successfully created the Formazone record.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "created!"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      training:
                        type: string
                      expiryDate:
                        type: string
                        format: date
                      dataRilascio:
                        type: string
                        format: date
                      attachment:
                        type: string
                        format: uri
                        description: URL of the uploaded file (if any).
        "400":
          description: Missing required field(s).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Missing required field: training"
        "401":
          description: Unauthorized request (JWT required).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error."

  /api/employee/formazone/update/{id}:
    patch:
      summary: Update a Formazone record by ID
      description: Updates a specific Formazone record identified by the ID, with optional file upload.
      tags:
        - employee/formazone
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Formazone record to update.
          schema:
            type: string
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                formazone:
                  type: string
                  format: binary
                  description: Optional file to upload.
                training:
                  type: string
                  description: The type of training for Formazone.
                expiryDate:
                  type: string
                  format: date
                  description: Expiry date of the Formazone record.
                dataRilascio:
                  type: string
                  format: date
                  description: Issuance date of the Formazone record.
                attachment:
                  format: file (pdf, doc, csv)
                  description: document to upload ahving key value as `formazone`.
      responses:
        "200":
          description: Successfully updated the Formazone record.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  training:
                    type: string
                  expiryDate:
                    type: string
                    format: date
                  dataRilascio:
                    type: string
                    format: date
                  attachment:
                    type: string
                    format: uri
                    description: URL of the uploaded file (if any).
        "400":
          description: Missing required ID or invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "id is required"
        "401":
          description: Unauthorized request (JWT required).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error."

  /api/employee/formazone/{eid}:
    get:
      summary: Get all Formazone records
      description: Retrieves all Formazone records from the database, associated with the logged in employee
      tags:
        - employee/formazone
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: eid   
          required: true
          schema:
            type: string
            description: "dynamic employee id"  
      responses:
        "200":
          description: Successfully fetched the Formazone records.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    training:
                      type: string
                    expiryDate:
                      type: string
                      format: date
                    dataRilascio:
                      type: string
                      format: date
                    attachment:
                      type: string
                      format: uri
                      description: URL of the uploaded file (if any).
        "401":
          description: Unauthorized request (JWT required).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error."

  /api/employee/formazone/{id}:
    get:
      summary: Get a Formazone record by ID
      description: Retrieves a specific Formazone record based on the provided ID.
      tags:
        - employee/formazone
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Formazone record to retrieve.
          schema:
            type: string
      responses:
        "200":
          description: Successfully fetched the Formazone record.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  training:
                    type: string
                  expiryDate:
                    type: string
                    format: date
                  dataRilascio:
                    type: string
                    format: date
                  attachment:
                    type: string
                    format: uri
                    description: URL of the uploaded file (if any).
        "404":
          description: Formazone record not found for the provided ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "formazone not found"
        "401":
          description: Unauthorized request (JWT required).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error."
