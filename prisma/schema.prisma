// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String
  password  String
  role      Role       @default(ADMIN)
  clients   Customer[] // one-to-many relations
  orders    Order[]
  suppliers Supplier[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Customer {
  id          String   @id @default(uuid())
  email       String   @unique
  name        String?
  password    String?
  companyName String
  vat         String
  taxId       String
  ateco       String
  nation      String
  province    String
  address     String
  common      String
  cap         String
  pec         String
  telephone   String
  role        Role     @default(USER)
  admin       Admin?   @relation(fields: [adminId], references: [id])
  adminId     String?
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Order {
  id                 String      @id @default(uuid())
  code               String      @unique
  description        String
  workAmount         Decimal
  advancePayment     Decimal
  startDate          DateTime
  endDate            DateTime
  province           String
  nation             String
  address            String
  common             String
  orderManager       String
  siteManager        String
  technicalManager   String
  admin              Admin?      @relation(fields: [adminId], references: [id])
  adminId            String?
  supplier           Supplier?   @relation(fields: [supplierEmail], references: [email])
  supplierEmail      String?
  cnceCode           String?
  cap                String
  cig                String
  cup                String
  iva                Float
  discountPercentage Float
  dipositRecovery    Float
  vat                Float?
  jobName            String?
  typology           String?
  withholdingAmount  Float
  lat                Float?
  lng                Float?
  contractAttachment String
  isPublic           Boolean     @default(false)
  status             OrderStatus @default(IN_DEPARTURE)
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  Customer           Customer?   @relation(fields: [customerId], references: [id])
  customerId         String?
}

model Supplier {
  id          String   @id @default(uuid())
  email       String   @unique //ref to supplierEmail in order table
  name        String?
  password    String?
  companyName String
  vat         String
  taxId       String
  ateco       String
  nation      String
  province    String
  address     String
  common      String
  cap         String
  pec         String
  telephone   String
  admin       Admin?   @relation(fields: [adminId], references: [id])
  adminId     String?
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Employee {
  id                  String   @id @default(uuid())
  name                String
  surname             String
  taxId               String
  nameAndSurname      String
  contractorNo        String
  sector              String
  startDate           DateTime
  endDate             DateTime
  municipalityOfBirth String
  level               String
  Qualification       String
  number              String
  email               String
  address             String
  role                Role     @default(ADMIN)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

enum OrderStatus {
  IN_DEPARTURE
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum State {
  pending
  ongoing
  completed
}

enum EmpRole {
  Training
  Unified_Labour_Notification
  Fitness
}

enum Role {
  ADMIN
  USER
}
