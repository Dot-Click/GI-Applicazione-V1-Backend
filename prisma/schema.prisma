// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id          String        @id @default(uuid())
  email       String        @unique
  name        String
  password    String
  role        Role          @default(ADMIN)
  clients     Customer[] // one-to-many relations
  orders      Order[]
  suppliers   Supplier[]
  employees   Employee[]
  account     Accounts[]
  invoices    Invoice[]
  ricavis     Ricavi[]
  costis      Costi[]
  orderSeq    ordSequence?
  supplierSeq supSequence?
  customerSeq custSequence?
  employeeSeq empSequence?
  invoiceSeq  InvoiceSequence?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Order {
  id                       String      @id @default(uuid())
  code                     String      @unique @db.VarChar(10)
  description              String
  workAmount               Decimal?    @db.Decimal(12, 4)
  advancePayment           Decimal?    @db.Decimal(12, 4)
  startDate                DateTime?   @db.Date
  endDate                  DateTime?   @db.Date
  address                  String
  // province           String
  // nation             String
  // common             String
  // cap                String
  // contractAttachment String
  // discountPercentage Float
  state                    OrderState? @default(ON_HOLD)
  cnceCode                 String?     @db.VarChar(50)
  orderManager             String
  siteManager              String
  technicalManager         String
  admin                    Admin?      @relation(fields: [adminId], references: [id])
  adminId                  String?
  supplier                 Supplier?   @relation(fields: [supplierId], references: [id])
  supplierId               String?
  status                   Status?     @default(active)
  cig                      String?     @db.VarChar(50)
  cup                      String?     @db.VarChar(50)
  iva                      Decimal?    @db.Decimal(12, 4)
  dipositRecovery          Decimal?    @db.Decimal(12, 4)
  employee                 Employee?   @relation(fields: [employeeId], references: [id])
  employeeId               String?
  jobName                  String?
  projectName              String?
  typology                 String?
  archieved                String?     @default("false")
  contract                 String?
  desc_contract            String?
  permission_to_build      String?
  desc_permission_to_build String?
  psc                      String?
  desc_psc                 String?
  pos                      String?
  desc_pos                 String?
  add_additional_1         String?
  desc_additional_1        String?
  add_additional_2         String?
  desc_additional_2        String?
  add_additional_3         String?
  desc_additional_3        String?
  add_additional_4         String?
  desc_additional_4        String?
  withholdingAmount        Decimal?    @db.Decimal(12, 4)
  lat                      String?     @default("37.7749")
  lng                      String?     @default("-122.4194")
  isPublic                 String?     @default("false")
  createdAt                DateTime    @default(now())
  updatedAt                DateTime    @updatedAt
  Customer                 Customer?   @relation(fields: [customerId], references: [id])
  customerId               String?
  account                  Accounts[]   
}

model ordSequence {
  id                        String   @id @default(uuid())
  added_col_array           String[]
  visible_col_array         String[]
  archive_added_col_array   String[]
  archive_visible_col_array String[]
  admin                     Admin?   @relation(fields: [adminId], references: [id])
  adminId                   String?  @unique
}

model Customer {
  id          String   @id @default(uuid())
  code        String   @unique @db.VarChar(10)
  email       String?
  name        String?
  password    String?
  companyName String   @unique
  vat         String
  taxId       String
  ateco       String?
  nation      String?
  province    String?
  address     String
  common      String?
  cap         String?
  pec         String?
  status      Status?  @default(active)
  telephone   String?
  role        Role     @default(USER)
  admin       Admin?   @relation(fields: [adminId], references: [id])
  adminId     String?
  account     Accounts[]
  invoices    Invoice[]
  ricavi      Ricavi[]
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model custSequence {
  id                String   @id @default(uuid())
  added_col_array   String[]
  visible_col_array String[]
  admin             Admin?   @relation(fields: [adminId], references: [id])
  adminId           String?  @unique
}

model Supplier {
  id          String   @id @default(uuid())
  code        String   @unique @db.VarChar(10)
  email       String?
  name        String?
  password    String?
  companyName String   @unique
  vat         String
  taxId       String
  // ateco       String?
  nation      String?
  province    String?
  address     String
  common      String?
  cap         String?
  pec         String?
  status      Status?  @default(active)
  telephone   String?
  admin       Admin?   @relation(fields: [adminId], references: [id])
  adminId     String?
  account     Accounts[]
  invoices    Invoice[]
  costi       Costi[]
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model supSequence {
  id                String   @id @default(uuid())
  added_col_array   String[]
  visible_col_array String[]
  admin             Admin?   @relation(fields: [adminId], references: [id])
  adminId           String?  @unique
}

model Employee {
  id                  String      @id @default(uuid())
  code                String      @unique @db.VarChar(10)
  email               String
  name                String
  surname             String
  taxId               String
  contractorNo        String?
  sector              String
  startDate           DateTime    @db.Date
  endDate             DateTime    @db.Date
  municipalityOfBirth String
  level               String
  qualification       String
  nameAndsurname      String
  natureContract      String?
  archieved           String?     @default("false")
  password            String?
  admin               Admin?      @relation(fields: [adminId], references: [id])
  unilavs             Unilav[]
  seritias            Seritia[]
  formazones          Formazone[]
  orders              Order[]
  adminId             String?
  dob                 String?
  telephone           String?
  status              Status      @default(active)
  address             String
  role                EmpRole?    @default(Technical_Manager)
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
}

model empSequence {
  id                        String   @id @default(uuid())
  added_col_array           String[]
  visible_col_array         String[]
  archive_added_col_array   String[]
  archive_visible_col_array String[]
  admin                     Admin?   @relation(fields: [adminId], references: [id])
  adminId                   String?  @unique
}

model Accounts {
  id           String     @id @default(uuid())
  code         String     @unique
  supplier     Supplier?   @relation(fields: [suppCode], references: [code])
  suppCode String?   
  customer     Customer?   @relation(fields: [custCode], references: [code])
  custCode String?  
  wbs          String?
  date         DateTime?   @db.Date
  sal         SAL[]
  cdp         CDP[]
  admin       Admin?      @relation(fields: [adminId], references: [id])
  adminId     String?
  see_SAL     String?
  note        String?
  see_CDP     String?
  current_SAL_amount         Decimal?    @db.Decimal(10, 4)
  progressive_SAL_amount     Decimal?    @db.Decimal(10, 4)
  status      accState?  @default(Da_approvare)
  order       Order      @relation(fields: [ordCode], references: [code])
  ordCode     String     
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  @@unique([suppCode, ordCode])
  @@unique([custCode, ordCode])
}
model SAL {
  id             String    @id @default(uuid())
  account        Accounts? @relation(fields: [accId], references: [id],onDelete: Cascade)
  accId          String?
  status         accState? @default(Da_approvare)
  sect           SALsect[]
  add_additional_1   String?
  desc_additional_1  String?  
  add_additional_2   String?
  desc_additional_2  String?  
  add_additional_3   String?
  desc_additional_3  String?
  total                 Decimal?    @db.Decimal(10, 4)
  discounts             Decimal?    @db.Decimal(10, 4)
  roundingDiscount      Decimal?    @db.Decimal(10, 4)
  agreed                Decimal?    @db.Decimal(10, 4)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}
model SALsect {
  id             String    @id @default(uuid())
  title          String
  sal            SAL?      @relation(fields: [salId], references: [id],onDelete: Cascade)
  salId          String?
  salData        salData[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}
model salData {
  id             String    @id @default(uuid())
  unitOfMeasures String?
  eqlParts       Int?
  description    String?
  lun            Int?
  lar            Int?
  alt            Int?
  quantity       Int?
  salSect        SALsect?  @relation(fields: [salSectId], references: [id],onDelete: Cascade)
  salSectId      String?  
  price          Decimal?   @db.Decimal(10, 4)
  amount         Decimal?   @db.Decimal(10, 4)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model CDP {
  id            String    @id @default(uuid())
  iva         Decimal?    @db.Decimal(12, 4) 
  currentWorkAmountSubjectToReduction Decimal?    @db.Decimal(12, 4)
  currentWorkAmountNotSubjectToDiscount Decimal?  @db.Decimal(12, 4)
  add_additional_1   String?
  desc_additional_1  String?  
  add_additional_2   String?
  desc_additional_2  String?  
  add_additional_3   String?
  desc_additional_3  String?
  reducedAmount      Decimal?    @db.Decimal(12, 4)
  account        Accounts? @relation(fields: [accId], references: [id],onDelete: Cascade)
  accId          String?
  status         accState?  @default(Da_approvare)
  currentWorksAmount Decimal?    @db.Decimal(12, 4)
  advPayment         Decimal?    @db.Decimal(12, 4)
  withholdingTax     Decimal?    @db.Decimal(12, 4)
  amtPresentCDP      Decimal?    @db.Decimal(12, 4)
  vat              Decimal?    @db.Decimal(12, 4)
  totalAmount      Decimal?    @db.Decimal(12, 4)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}
model Unilav {
  id                String        @id @default(uuid())
  name              String?
  status            Status?       @default(active)
  state             SectionState? @default(Valido)
  attachment        String
  healthEligibility String
  expiryDate        String
  dataRilascio      String
  validityDays      String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  Employee          Employee?     @relation(fields: [employeeId], references: [id],onDelete: Cascade)
  employeeId        String?
}

model Seritia {
  id                String        @id @default(uuid())
  name              String?
  status            Status?       @default(active)
  state             SectionState? @default(Valido)
  attachment        String
  healthEligibility String
  expiryDate        String
  dataRilascio      String
  Employee          Employee?     @relation(fields: [employeeId], references: [id],onDelete: Cascade)
  employeeId        String?
  validityDays      String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
}

model Formazone {
  id           String        @id @default(uuid())
  name         String?
  status       Status?       @default(active)
  state        SectionState? @default(Valido)
  attachment   String
  training     String
  expiryDate   String
  dataRilascio String
  Employee     Employee?     @relation(fields: [employeeId], references: [id],onDelete: Cascade)
  employeeId   String?
  validityDays String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Invoice {
  id           String        @id @default(uuid())
  Customer                 Customer?   @relation(fields: [customerId], references: [id])
  customerId               String?
  supplier                 Supplier?   @relation(fields: [supplierId], references: [id])
  supplierId               String?
  admin       Admin?      @relation(fields: [adminId], references: [id])
  adminId     String?             
  docNo        String      @unique
  vat          String?
  name         String?
  taxAmt       Decimal?      @db.Decimal(12,4)
  docDate      DateTime?     @db.Date   
  vatRate      Decimal       @db.Decimal(12,4)
  split        String?     
  ricavi       Ricavi[]  
  costi        Costi[]
  typology     String?
  processed    InvStatus?    @default(No)
  type         InvType?      @default(attive) 
  yearOfCompetence  String?
  protocol     String?
  attachment   String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model InvoiceSequence {
  id           String        @id @default(uuid())
  admin       Admin?      @relation(fields: [adminId], references: [id])
  adminId     String?  @unique
  active_added_col_array           String[]
  active_visible_col_array         String[]
  passive_added_col_array   String[]
  passive_visible_col_array String[]
}

model Ricavi {
  id           String        @id @default(uuid())
  Customer     Customer?     @relation(fields: [customerId], references: [id])
  customerId   String?
  workSite     String?
  iva          String?
  docNo        String        @unique
  wbs          String?
  note         String?
  invoice      Invoice?       @relation(fields: [invId], references: [id])
  invId        String?
  admin       Admin?      @relation(fields: [adminId], references: [id])
  adminId     String? 
  docDate      DateTime?     @db.Date     
  yearOfCompetence  String?
  revAmt       Decimal       @db.Decimal(12, 4)
  advancePayment  Decimal?    @db.Decimal(12, 4)
  withHoldAmt   Decimal?      @db.Decimal(12, 4)           
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}
model Costi {
  id           String        @id @default(uuid())
  supplier     Supplier?     @relation(fields: [supplierId], references: [id])
  supplierId   String?
  iva          String?
  docNo        String        @unique
  workSite     String?
  wbs          String?
  docDate      DateTime?     @db.Date     
  yearOfCompetence  String?
  note         String?
  invoice      Invoice?       @relation(fields: [invId], references: [id])
  admin       Admin?      @relation(fields: [adminId], references: [id])
  adminId     String?          
  invId        String?
  revAmt       Decimal       @db.Decimal(12, 4)
  advancePayment  Decimal?    @db.Decimal(12, 4)
  withHoldAmt   Decimal?      @db.Decimal(12, 4)           
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

enum InvType {
  attive
  passive
}
enum InvStatus {
  Si 
  No
}

enum OrderState {
  ON_HOLD     @map("In attesa")
  IN_PROGRESS @map("In corso")
  COMPLETATO  @map("Completato")
  CANCELLED   @map("Cancellato")
}

enum Status {
  active
  inactive
  pending
  ongoing
  completed
}

enum accState {
  Approvato
  Da_approvare
  Non_approvata
}

enum EmpRole {
  Admin
  Technical_Manager
  Order_Manager
  Construction_Manager
}

enum SectionState {
  Valido
  Scaduto
}

enum Role {
  ADMIN
  USER
  Visualizzatore
  Editor
  Ospite
}
