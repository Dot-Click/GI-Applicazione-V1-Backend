// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id          String        @id @default(uuid())
  email       String        @unique
  name        String
  password    String
  role        Role          @default(ADMIN)
  clients     Customer[] // one-to-many relations
  orders      Order[]
  suppliers   Supplier[]
  employees   Employee[]
  orderSeq    ordSequence?
  supplierSeq supSequence?
  customerSeq custSequence?
  employeeSeq empSequence?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Customer {
  id          String   @id @default(uuid())
  email       String   @unique
  name        String?
  password    String?
  companyName String
  vat         String
  taxId       String
  ateco       String?
  nation      String?
  province    String?
  address     String
  common      String?
  cap         String?
  pec         String
  status      Status?  @default(active)
  telephone   String
  role        Role     @default(USER)
  admin       Admin?   @relation(fields: [adminId], references: [id])
  adminId     String?
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model custSequence {
  id                String   @id @default(uuid())
  added_col_array   String[]
  visible_col_array String[]
  admin             Admin?   @relation(fields: [adminId], references: [id])
  adminId           String?  @unique
}

model Order {
  id                       String      @id @default(uuid())
  code                     String      @unique
  description              String
  workAmount               String
  advancePayment           String
  startDate                String
  endDate                  String
  address                  String
  // province           String
  // nation             String
  // common             String
  // cap                String
  // contractAttachment String
  // discountPercentage Float
  state                    OrderState? @default(ON_HOLD)
  cnceCode                 String
  orderManager             String
  siteManager              String
  technicalManager         String
  admin                    Admin?      @relation(fields: [adminId], references: [id])
  adminId                  String?
  supplier                 Supplier?   @relation(fields: [supplierId], references: [id])
  supplierId               String?
  status                   Status?     @default(active)
  cig                      String
  cup                      String
  iva                      String
  dipositRecovery          String
  vat                      String?
  jobName                  String?
  projectName              String?
  typology                 String?
  archieved                String?     @default("false")
  contract                 String?
  desc_contract            String?
  permission_to_build      String?
  desc_permission_to_build String?
  psc                      String?
  desc_psc                 String?
  pos                      String?
  desc_pos                 String?
  withholdingAmount        String
  lat                      String?     @default("37.7749")
  lng                      String?     @default("-122.4194")
  isPublic                 String?     @default("false")
  createdAt                DateTime    @default(now())
  updatedAt                DateTime    @updatedAt
  Customer                 Customer?   @relation(fields: [customerId], references: [id])
  customerId               String?
}

model ordSequence {
  id                String   @id @default(uuid())
  added_col_array   String[]
  visible_col_array String[]
  admin             Admin?   @relation(fields: [adminId], references: [id])
  adminId           String?  @unique
}

model Supplier {
  id          String   @id @default(uuid())
  email       String   @unique //ref to supplierEmail in order table
  name        String?
  password    String?
  companyName String
  vat         String
  taxId       String
  // ateco       String?
  nation      String?
  province    String?
  address     String
  common      String?
  cap         String?
  pec         String
  status      Status?  @default(active)
  telephone   String
  admin       Admin?   @relation(fields: [adminId], references: [id])
  adminId     String?
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model supSequence {
  id                String   @id @default(uuid())
  added_col_array   String[]
  visible_col_array String[]
  admin             Admin?   @relation(fields: [adminId], references: [id])
  adminId           String?  @unique
}

model Employee {
  id                  String      @id @default(uuid())
  email               String      @unique
  name                String
  surname             String
  taxId               String
  contractorNo        String
  sector              String
  startDate           String
  endDate             String
  municipalityOfBirth String
  level               String
  qualification       String
  number              String
  nameAndsurname      String?
  natureContract      String?
  archieved           String?     @default("false")
  password            String?
  admin               Admin?      @relation(fields: [adminId], references: [id])
  unilavs             Unilav[]
  seritias            Seritia[]
  formazones          Formazone[]
  adminId             String?
  dob                 String?
  telephone           String?
  address             String
  role                EmpRole     @default(Admin)
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
}

model empSequence {
  id                String   @id @default(uuid())
  added_col_array   String[]
  visible_col_array String[]
  admin             Admin?   @relation(fields: [adminId], references: [id])
  adminId           String?  @unique
}

model Unilav {
  id                String    @id @default(uuid())
  name              String?
  status            Status?       @default(active)
  state             SectionState? @default(Valido)
  attachment        String
  healthEligibility String
  expiryDate        String
  dataRilascio      String
  validityDays      String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  Employee          Employee? @relation(fields: [employeeId], references: [id])
  employeeId        String?
}

model Seritia {
  id                String    @id @default(uuid())
  name              String?
  status            Status?   @default(active)
  state             SectionState? @default(Valido)
  attachment        String
  healthEligibility String
  expiryDate        String
  dataRilascio      String
  Employee          Employee? @relation(fields: [employeeId], references: [id])
  employeeId        String?
  validityDays      String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Formazone {
  id           String    @id @default(uuid())
  name         String?
  status       Status?   @default(active)
  state        SectionState? @default(Valido)
  attachment   String
  training     String
  expiryDate   String
  dataRilascio String
  Employee     Employee? @relation(fields: [employeeId], references: [id])
  employeeId   String?
  validityDays String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

enum OrderState {
  ON_HOLD     @map("In attesa")
  IN_PROGRESS @map("In corso")
  COMPLETATO  @map("Completato")
  CANCELLED   @map("Cancellato")
}

enum Status {
  active
  inactive
  pending
  ongoing
  completed
}

enum EmpRole {
  Admin
  Technical_Manager
  Order_Manager
  Construction_Manager
}

enum SectionState {
  Valido
  Scaduto
}

enum Role {
  ADMIN
  USER
  Visualizzatore
  Editor
  Ospite
}
